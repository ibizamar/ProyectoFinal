-- MySQL Script generated by MySQL Workbench
-- Thu May 17 14:55:21 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema perfumeria
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema perfumeria
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `perfumeria` DEFAULT CHARACTER SET utf8 ;
USE `perfumeria` ;

-- -----------------------------------------------------
-- Table `perfumeria`.`usuarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `perfumeria`.`usuarios` ;

CREATE TABLE IF NOT EXISTS `perfumeria`.`usuarios` (
  `idusuario` INT NOT NULL AUTO_INCREMENT,
  `unombre` VARCHAR(45) NULL,
  `mail` VARCHAR(45) NULL,
  `contrasena` VARCHAR(45) NULL,
  `fecha` DATE NULL,
  `tarjeta` INT NULL,
  `direccion` VARCHAR(45) NULL,
  PRIMARY KEY (`idusuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `perfumeria`.`marca`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `perfumeria`.`marca` ;

CREATE TABLE IF NOT EXISTS `perfumeria`.`marca` (
  `idmarca` INT NOT NULL AUTO_INCREMENT,
  `mnombre` VARCHAR(45) NULL,
  PRIMARY KEY (`idmarca`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `perfumeria`.`producto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `perfumeria`.`producto` ;

CREATE TABLE IF NOT EXISTS `perfumeria`.`producto` (
  `idproducto` INT NOT NULL AUTO_INCREMENT,
  `pnombre` VARCHAR(45) NULL,
  `descripcion` VARCHAR(45) NULL,
  `foto` VARCHAR(45) NULL,
  `precio` FLOAT NULL,
  `cantidad` INT NOT NULL,
  `idmarca` INT NULL,

  PRIMARY KEY (`idproducto`),
  INDEX `FK_productomarca_idx` (`idmarca` ASC),
  CONSTRAINT `FK_productomarca`
    FOREIGN KEY (`idmarca`)
    REFERENCES `perfumeria`.`marca` (`idmarca`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `perfumeria`.`historial`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `perfumeria`.`historial` ;

CREATE TABLE IF NOT EXISTS `perfumeria`.`historial` (
  `idhistorial` INT NOT NULL AUTO_INCREMENT,
  `idproducto` INT NULL,
  `idusuario` INT NULL,
  `cantidad` INT NULL,
  PRIMARY KEY (`idhistorial`),
  INDEX `FK_historialproducto_idx` (`idproducto` ASC),
  INDEX `FK_historialusuario_idx` (`idusuario` ASC),
  CONSTRAINT `FK_historialproducto`
    FOREIGN KEY (`idproducto`)
    REFERENCES `perfumeria`.`producto` (`idproducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_historialusuario`
    FOREIGN KEY (`idusuario`)
    REFERENCES `perfumeria`.`usuarios` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `perfumeria`.`carrito`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `perfumeria`.`carrito` ;

CREATE TABLE IF NOT EXISTS `perfumeria`.`carrito` (
  `idcarrito` INT NOT NULL AUTO_INCREMENT,
  `idproducto` INT NULL,
  `idusuario` INT NULL,
  `cantidad` INT NULL,
  PRIMARY KEY (`idcarrito`),
  INDEX `FK_carritousuarios_idx` (`idusuario` ASC),
  INDEX `FK_carritoproducto_idx` (`idproducto` ASC),
  CONSTRAINT `FK_carritousuarios`
    FOREIGN KEY (`idusuario`)
    REFERENCES `perfumeria`.`usuarios` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_carritoproducto`
    FOREIGN KEY (`idproducto`)
    REFERENCES `perfumeria`.`producto` (`idproducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
